/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'Tony' at '16-2-17 上午9:09' with Gradle 2.6
 */
buildscript {
    repositories {
        maven { url "http://maven.parim.net/nexus/content/groups/public/" }
        maven { url "https://repo.spring.io/plugins-release" }
        jcenter()
    }

    dependencies {
        classpath("org.springframework.build.gradle:propdeps-plugin:0.0.7")
        classpath("org.asciidoctor:asciidoctor-gradle-plugin:1.5.2")
        classpath("io.spring.gradle:docbook-reference-plugin:0.3.1")
        classpath 'com.bmuschko:gradle-tomcat-plugin:2.2.4'
    }
}

ext {
    //wst = 'webapp'
}

allprojects {
    group = 'net.parim'
    version = '0.1.1'

    ext.gradleScriptDir = "${rootProject.projectDir}/gradle"
    //ext.wst = null

    ext {
        //main version settings
        springVersion = '4.2.4.RELEASE'
	    springDataVersion = ''
		mybatisVersion = '3.2.8'
		mybatisSpringVersion = '1.2.2'
		druidVersion = '1.0.11'
		ehcacheVersion = '2.6.9'
		ehcacheWebVersion = '2.0.4'
		shiroVersion = '1.2.3'
		sitemeshVersion = '2.4.2'

        // jdbc driver setting
		mysqlDriverVersion = '5.1.30'
		oracleDriverVersion = '10.2.0.4.0'

		//tools version setting
		slf4jVersion = '1.7.7'
		commonsLang3Version = '3.3.2'
		commonsIoVersion = '2.4'
		commonsCodecVersion = '1.9'
		commonsFileuploadVersion = '1.3.1'
		commonsBeanutilsVersion = '1.9.1'
		jacksonVersion = '2.2.3'
		xstreamVersion = '1.4.7'
		guavaVersion = '17.0'
		dozerVersion = '5.5.1'
		poiVersion = '3.9'
		freemarkerVersion = '2.3.20'

        //test utils
        hamcrestVersion      = "1.3"
        junitVersion         = "4.12"
    }

    apply plugin: "propdeps"
    apply plugin: "java"
    apply plugin: "war"
    apply from: "${gradleScriptDir}/ide.gradle"

    configurations {
        //文件修改嗅探器和javaAPI生成器，可以根据修改实时生成javaAPI，
        //方便文档维护和查阅
        //sniffer
        //javaApiSignature
    }

    compileJava.options*.compilerArgs = [
        "-Xlint:serial", "-Xlint:varargs", "-Xlint:cast", "-Xlint:classfile",
        "-Xlint:dep-ann", "-Xlint:divzero", "-Xlint:empty", "-Xlint:finally",
        "-Xlint:overrides", "-Xlint:path", "-Xlint:processing", "-Xlint:static",
        "-Xlint:try", "-Xlint:fallthrough", "-Xlint:rawtypes", "-Xlint:deprecation",
        "-Xlint:unchecked", "-Xlint:-options"
        //, "-Werror" //编译警告级别，启用后，有警告时编译不通过
    ]
    [compileJava,compileTestJava,javadoc]*.options*.encoding = "UTF-8"

    compileTestJava.options*.compilerArgs = [
        "-Xlint:serial", "-Xlint:-varargs", "-Xlint:cast", "-Xlint:classfile",
        "-Xlint:dep-ann", "-Xlint:divzero", "-Xlint:empty", "-Xlint:finally",
        "-Xlint:overrides", "-Xlint:path", "-Xlint:processing", "-Xlint:static",
        "-Xlint:try", "-Xlint:-fallthrough", "-Xlint:-rawtypes", "-Xlint:-deprecation",
        "-Xlint:-unchecked", "-Xlint:-options"]

    compileJava {
        sourceCompatibility = 1.6
        targetCompatibility = 1.6
    }

    compileTestJava {
        sourceCompatibility = 1.7
        targetCompatibility = 1.7
    //    options.compilerArgs += "-parameters"
    }

    test {
        systemProperty("java.awt.headless", "true")
        systemProperty("testGroups", project.properties.get("testGroups"))
        scanForTestClasses = false
        include(["**/*Tests.class", "**/*Test.class"])
        // Since we set scanForTestClasses to false, we need to filter out inner
        // classes with the "$" pattern; otherwise, using -Dtest.single=MyTests to
        // run MyTests by itself will fail if MyTests contains any inner classes.
        exclude(["**/Abstract*.class", '**/*$*'])
    }

    repositories {
    	maven { url "http://maven.parim.net/nexus/content/groups/public/" }
        mavenCentral()
        jcenter()
        //maven { url "http://repo.parim.net/libs-release" }
        //maven { url "http://repo.parim.net/milestone" }
        //maven { url "http://repo.parim.net/snapshot" }
    }

    dependencies {
        compile(
    		//WEB
            //"opensymphony:sitemesh:${sitemeshVersion}",
            "taglibs:standard:1.1.2",
            "javax.servlet:jstl:1.2" //'javax.servlet.jsp.jstl:jstl:1.2',
        )

		compile fileTree(dir: 'lib', exclude:'', include: '*.jar')

        testCompile "org.springframework:spring-test:${springVersion}"
        testCompile("junit:junit:${junitVersion}") {
            exclude group:'org.hamcrest', module:'hamcrest-core'
        }
        testCompile("org.mockito:mockito-core:1.10.19") {
            exclude group:'org.hamcrest', module:'hamcrest-core'
        }
        testCompile("org.hamcrest:hamcrest-all:${hamcrestVersion}")

        //sniffer("org.codehaus.mojo:animal-sniffer-ant-tasks:${snifferVersion}")
        //javaApiSignature("org.codehaus.mojo.signature:java16:1.1@signature")  // API level from JDK 6 update 18

        providedCompile "javax.servlet.jsp:jsp-api:2.2.1-b03"
        providedCompile "javax.servlet:javax.servlet-api:3.1.0" // 编译期
    }
}


subprojects {

}
